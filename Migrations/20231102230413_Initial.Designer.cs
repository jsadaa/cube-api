// <auto-generated />
using System;
using ApiCube;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiCube.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20231102230413_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ApiCube.Models.ClientModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("adresse");

                    b.Property<DateTime>("DateInscription")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_inscription");

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_naissance");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("login");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nom");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password");

                    b.Property<int>("PointsFidelite")
                        .HasColumnType("int")
                        .HasColumnName("points_fidelite");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("prenom");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("role");

                    b.Property<double>("Solde")
                        .HasColumnType("double")
                        .HasColumnName("solde");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("statut");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("telephone");

                    b.HasKey("Id");

                    b.ToTable("client");
                });

            modelBuilder.Entity("ApiCube.Models.CommandeClientModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("client_id");

                    b.Property<DateTime>("DateCommande")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_commande");

                    b.Property<DateTime>("DateLivraison")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_livraison");

                    b.Property<int>("EmployeId")
                        .HasColumnType("int")
                        .HasColumnName("employe_id");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("statut");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("EmployeId");

                    b.ToTable("commande_client");
                });

            modelBuilder.Entity("ApiCube.Models.CommandeFournisseurModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("DateCommande")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_commande");

                    b.Property<DateTime>("DateLivraison")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_livraison");

                    b.Property<int>("EmployeId")
                        .HasColumnType("int")
                        .HasColumnName("employe_id");

                    b.Property<int>("FournisseurId")
                        .HasColumnType("int")
                        .HasColumnName("fournisseur_id");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("statut");

                    b.HasKey("Id");

                    b.HasIndex("EmployeId");

                    b.HasIndex("FournisseurId");

                    b.ToTable("commande_fournisseur");
                });

            modelBuilder.Entity("ApiCube.Models.EmployeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("adresse");

                    b.Property<DateTime>("DateDepart")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_depart");

                    b.Property<DateTime>("DateEmbauche")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_embauche");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("login");

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mot_de_passe");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nom");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("prenom");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("role");

                    b.Property<int?>("RoleModelId")
                        .HasColumnType("int");

                    b.Property<double>("Salaire")
                        .HasColumnType("double")
                        .HasColumnName("salaire");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("statut");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("telephone");

                    b.HasKey("Id");

                    b.HasIndex("RoleModelId");

                    b.ToTable("employe");
                });

            modelBuilder.Entity("ApiCube.Models.FactureClientModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("client_id");

                    b.Property<int>("CommandeClientId")
                        .HasColumnType("int")
                        .HasColumnName("commande_client_id");

                    b.Property<DateTime>("DateFacture")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_facture");

                    b.Property<int>("EmployeId")
                        .HasColumnType("int")
                        .HasColumnName("employe_id");

                    b.Property<double>("PrixHt")
                        .HasColumnType("double")
                        .HasColumnName("prix_ht");

                    b.Property<double>("PrixTtc")
                        .HasColumnType("double")
                        .HasColumnName("prix_ttc");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("statut");

                    b.Property<double>("Tva")
                        .HasColumnType("double")
                        .HasColumnName("tva");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("CommandeClientId");

                    b.HasIndex("EmployeId");

                    b.ToTable("facture_client");
                });

            modelBuilder.Entity("ApiCube.Models.FactureFournisseurModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("CommandeFournisseurId")
                        .HasColumnType("int")
                        .HasColumnName("commande_fournisseur_id");

                    b.Property<DateTime>("DateEcheance")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_echeance");

                    b.Property<DateTime>("DateFacture")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_facture");

                    b.Property<int>("EmployeId")
                        .HasColumnType("int")
                        .HasColumnName("employe_id");

                    b.Property<int>("FournisseurId")
                        .HasColumnType("int")
                        .HasColumnName("fournisseur_id");

                    b.Property<double>("PrixHt")
                        .HasColumnType("double")
                        .HasColumnName("prix_ht");

                    b.Property<double>("PrixTtc")
                        .HasColumnType("double")
                        .HasColumnName("prix_ttc");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("statut");

                    b.Property<double>("Tva")
                        .HasColumnType("double")
                        .HasColumnName("tva");

                    b.HasKey("Id");

                    b.HasIndex("CommandeFournisseurId");

                    b.HasIndex("EmployeId");

                    b.HasIndex("FournisseurId");

                    b.ToTable("facture_fournisseur");
                });

            modelBuilder.Entity("ApiCube.Models.FamilleProduitModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("description");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nom");

                    b.HasKey("Id");

                    b.ToTable("famille_produit");
                });

            modelBuilder.Entity("ApiCube.Models.FournisseurModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("adresse");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nom");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("telephone");

                    b.HasKey("Id");

                    b.ToTable("fournisseur");
                });

            modelBuilder.Entity("ApiCube.Models.LigneCommandeClientModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("CommandeClientId")
                        .HasColumnType("int")
                        .HasColumnName("commande_client_id");

                    b.Property<double>("PrixUnitaire")
                        .HasColumnType("double")
                        .HasColumnName("prix_unitaire");

                    b.Property<int>("ProduitId")
                        .HasColumnType("int")
                        .HasColumnName("produit_id");

                    b.Property<int>("Quantite")
                        .HasColumnType("int")
                        .HasColumnName("quantite");

                    b.Property<double>("Remise")
                        .HasColumnType("double")
                        .HasColumnName("remise");

                    b.Property<double>("Total")
                        .HasColumnType("double")
                        .HasColumnName("total");

                    b.HasKey("Id");

                    b.HasIndex("CommandeClientId");

                    b.HasIndex("ProduitId");

                    b.ToTable("ligne_commande_client");
                });

            modelBuilder.Entity("ApiCube.Models.LigneCommandeFournisseurModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("CommandeFournisseurId")
                        .HasColumnType("int")
                        .HasColumnName("commande_fournisseur_id");

                    b.Property<double>("PrixUnitaire")
                        .HasColumnType("double")
                        .HasColumnName("prix_unitaire");

                    b.Property<int>("ProduitId")
                        .HasColumnType("int")
                        .HasColumnName("produit_id");

                    b.Property<int>("Quantite")
                        .HasColumnType("int")
                        .HasColumnName("quantite");

                    b.Property<double>("Remise")
                        .HasColumnType("double")
                        .HasColumnName("remise");

                    b.Property<double>("Total")
                        .HasColumnType("double")
                        .HasColumnName("total");

                    b.HasKey("Id");

                    b.HasIndex("CommandeFournisseurId");

                    b.HasIndex("ProduitId");

                    b.ToTable("ligne_commande_fournisseur");
                });

            modelBuilder.Entity("ApiCube.Models.ProduitModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("DateAchat")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_achat");

                    b.Property<DateTime>("DatePeremption")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_peremption");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("description");

                    b.Property<int>("FamilleProduitId")
                        .HasColumnType("int")
                        .HasColumnName("famille_produit_id");

                    b.Property<int>("FournisseurId")
                        .HasColumnType("int")
                        .HasColumnName("fournisseur_id");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nom");

                    b.Property<double>("PrixAchat")
                        .HasColumnType("double")
                        .HasColumnName("prix_achat");

                    b.Property<double>("PrixVente")
                        .HasColumnType("double")
                        .HasColumnName("prix_vente");

                    b.Property<int?>("PromotionId")
                        .HasColumnType("int")
                        .HasColumnName("promotion_id");

                    b.Property<int>("Quantite")
                        .HasColumnType("int")
                        .HasColumnName("quantite");

                    b.Property<int>("SeuilDisponibilite")
                        .HasColumnType("int")
                        .HasColumnName("seuil_disponibilite");

                    b.Property<string>("StatutStock")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("statut_stock");

                    b.HasKey("Id");

                    b.HasIndex("FamilleProduitId");

                    b.HasIndex("FournisseurId");

                    b.HasIndex("PromotionId");

                    b.ToTable("produit");
                });

            modelBuilder.Entity("ApiCube.Models.PromotionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_debut");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_fin");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("description");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nom");

                    b.Property<double>("Pourcentage")
                        .HasColumnType("double")
                        .HasColumnName("pourcentage");

                    b.Property<int>("ProduitId")
                        .HasColumnType("int")
                        .HasColumnName("produit_id");

                    b.HasKey("Id");

                    b.HasIndex("ProduitId");

                    b.ToTable("promotion");
                });

            modelBuilder.Entity("ApiCube.Models.RoleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nom");

                    b.HasKey("Id");

                    b.ToTable("role");
                });

            modelBuilder.Entity("ApiCube.Models.TransactionStockModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date");

                    b.Property<double>("PrixTotal")
                        .HasColumnType("double")
                        .HasColumnName("prix_total");

                    b.Property<double>("PrixUnitaire")
                        .HasColumnType("double")
                        .HasColumnName("prix_unitaire");

                    b.Property<int>("ProduitId")
                        .HasColumnType("int")
                        .HasColumnName("produit_id");

                    b.Property<int>("Quantite")
                        .HasColumnType("int")
                        .HasColumnName("quantite");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex("ProduitId");

                    b.ToTable("transaction_stock");
                });

            modelBuilder.Entity("ApiCube.Models.CommandeClientModel", b =>
                {
                    b.HasOne("ApiCube.Models.ClientModel", "Client")
                        .WithMany("Commandes")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiCube.Models.EmployeModel", "Employe")
                        .WithMany()
                        .HasForeignKey("EmployeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Employe");
                });

            modelBuilder.Entity("ApiCube.Models.CommandeFournisseurModel", b =>
                {
                    b.HasOne("ApiCube.Models.EmployeModel", "Employe")
                        .WithMany()
                        .HasForeignKey("EmployeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiCube.Models.FournisseurModel", "Fournisseur")
                        .WithMany()
                        .HasForeignKey("FournisseurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employe");

                    b.Navigation("Fournisseur");
                });

            modelBuilder.Entity("ApiCube.Models.EmployeModel", b =>
                {
                    b.HasOne("ApiCube.Models.RoleModel", null)
                        .WithMany("Employes")
                        .HasForeignKey("RoleModelId");
                });

            modelBuilder.Entity("ApiCube.Models.FactureClientModel", b =>
                {
                    b.HasOne("ApiCube.Models.ClientModel", "Client")
                        .WithMany("Factures")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiCube.Models.CommandeClientModel", "CommandeClient")
                        .WithMany()
                        .HasForeignKey("CommandeClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiCube.Models.EmployeModel", "Employe")
                        .WithMany()
                        .HasForeignKey("EmployeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("CommandeClient");

                    b.Navigation("Employe");
                });

            modelBuilder.Entity("ApiCube.Models.FactureFournisseurModel", b =>
                {
                    b.HasOne("ApiCube.Models.CommandeFournisseurModel", "CommandeFournisseur")
                        .WithMany()
                        .HasForeignKey("CommandeFournisseurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiCube.Models.EmployeModel", "Employe")
                        .WithMany()
                        .HasForeignKey("EmployeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiCube.Models.FournisseurModel", "Fournisseur")
                        .WithMany()
                        .HasForeignKey("FournisseurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommandeFournisseur");

                    b.Navigation("Employe");

                    b.Navigation("Fournisseur");
                });

            modelBuilder.Entity("ApiCube.Models.LigneCommandeClientModel", b =>
                {
                    b.HasOne("ApiCube.Models.CommandeClientModel", "CommandeClient")
                        .WithMany("LigneCommandeClients")
                        .HasForeignKey("CommandeClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiCube.Models.ProduitModel", "Produit")
                        .WithMany()
                        .HasForeignKey("ProduitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommandeClient");

                    b.Navigation("Produit");
                });

            modelBuilder.Entity("ApiCube.Models.LigneCommandeFournisseurModel", b =>
                {
                    b.HasOne("ApiCube.Models.CommandeFournisseurModel", "CommandeFournisseur")
                        .WithMany("LigneCommandeFournisseurs")
                        .HasForeignKey("CommandeFournisseurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiCube.Models.ProduitModel", "Produit")
                        .WithMany()
                        .HasForeignKey("ProduitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommandeFournisseur");

                    b.Navigation("Produit");
                });

            modelBuilder.Entity("ApiCube.Models.ProduitModel", b =>
                {
                    b.HasOne("ApiCube.Models.FamilleProduitModel", "FamilleProduit")
                        .WithMany()
                        .HasForeignKey("FamilleProduitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiCube.Models.FournisseurModel", "Fournisseur")
                        .WithMany("Produits")
                        .HasForeignKey("FournisseurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiCube.Models.PromotionModel", "Promotion")
                        .WithMany()
                        .HasForeignKey("PromotionId");

                    b.Navigation("FamilleProduit");

                    b.Navigation("Fournisseur");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("ApiCube.Models.PromotionModel", b =>
                {
                    b.HasOne("ApiCube.Models.ProduitModel", "Produit")
                        .WithMany()
                        .HasForeignKey("ProduitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produit");
                });

            modelBuilder.Entity("ApiCube.Models.TransactionStockModel", b =>
                {
                    b.HasOne("ApiCube.Models.ProduitModel", "Produit")
                        .WithMany()
                        .HasForeignKey("ProduitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produit");
                });

            modelBuilder.Entity("ApiCube.Models.ClientModel", b =>
                {
                    b.Navigation("Commandes");

                    b.Navigation("Factures");
                });

            modelBuilder.Entity("ApiCube.Models.CommandeClientModel", b =>
                {
                    b.Navigation("LigneCommandeClients");
                });

            modelBuilder.Entity("ApiCube.Models.CommandeFournisseurModel", b =>
                {
                    b.Navigation("LigneCommandeFournisseurs");
                });

            modelBuilder.Entity("ApiCube.Models.FournisseurModel", b =>
                {
                    b.Navigation("Produits");
                });

            modelBuilder.Entity("ApiCube.Models.RoleModel", b =>
                {
                    b.Navigation("Employes");
                });
#pragma warning restore 612, 618
        }
    }
}
